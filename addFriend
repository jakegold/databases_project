

#Define route for adding a friend
@app.route('/addFriend')
def addFriend():
    return render_template('addFriend.html')

#Authenticates the addition
@app.route('/addFriendAuth', methods=['GET', 'POST'])
def addFriendAuth():
    username = session['username']
    friendGroup = request.form['friendGroup'] 
    firstname = request.form['firstname']
    lastname = request.form['lastname']
    #friendName = request.form['friendUsername']
    cursor = conn.cursor()
 
    #getting username of friend to add
    query = 'SELECT username FROM person WHERE first_name = %s AND last_name = %s'
    cursor.execute(query, (firstname, lastname))
    data = cursor.fetchall()
    error = None
    
    if len(data) > 1: #len()
        return render_template('addFriendU.html')

    friendName = data[0]
    
    query1 = 'SELECT * FROM member WHERE username = %s AND group_name = %s AND username_creator = %s' 
    cursor.execute(query1, (friendName, friendGroup, username))
    data1 = cursor.fetchone()	
    if(data1):
        error = "This user already exists in this friend group"
        return render_template('addFriend.html', error = error)
    else:
        ins = 'INSERT INTO member (group_name, username, username_creator) VALUES (%s, (SELECT username FROM person WHERE first_name = %s AND last_name = %s), %s)'
        cursor.execute(ins, (friendGroup, firstname, lastname, username))
        conn.commit()
        cursor.close()
        return render_template('home.html')


#Define route for adding a friend
@app.route('/addFriendU')
def addFriendU():
    return render_template('addFriendU.html')

#Authenticates the addition
@app.route('/addFriendAuthU', methods=['GET', 'POST'])
def addFriendAuthU():
    username = session['username']
    friendGroup = request.form['friendGroup'] 
    friendName = request.form['friendUsername']
    cursor = conn.cursor()
    query1 = 'SELECT * FROM member WHERE username = %s AND group_name = %s AND username_creator = %s' 
    cursor.execute(query1, (friendName, friendGroup, username))
    data1 = cursor.fetchone()	
##    if(data1):
##        #If the previous query returns data, then user exists
##        error = "This user already exists in this friend group"
##        return render_template('addFriend.html', error = error)
##     else:
    ins = 'INSERT INTO member (group_name, username, username_creator) VALUES (%s, %s, %s)'
    cursor.execute(ins, (friendGroup, friendName, username))
    conn.commit()
    cursor.close()
    return render_template('home.html')
